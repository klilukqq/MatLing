
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CIN COUT ENDL EQUALS GREATER GREATERGREATER ID INCLUDE INT LBRACE LESS LESSLESS LPAREN MAIN NUMBER RBRACE RETURN RPAREN SEMICOLON STRINGprogram : include_directive main_functioninclude_directive : INCLUDE LESS ID GREATERmain_function : INT MAIN LPAREN RPAREN LBRACE statements RBRACEstatements : statement\n| statements statementstatement : expression SEMICOLON\n| declaration SEMICOLON\n| return_statement SEMICOLONdeclaration : INT IDexpression : COUT LESSLESS STRING LESSLESS ENDL\n| COUT LESSLESS ID LESSLESS ENDL\n| CIN GREATERGREATER IDreturn_statement : RETURN NUMBER'
    
_lr_action_items = {'INCLUDE':([0,],[3,]),'$end':([1,4,23,],[0,-1,-3,]),'INT':([2,10,12,14,15,24,25,26,27,],[5,-2,13,13,-4,-5,-6,-7,-8,]),'LESS':([3,],[6,]),'MAIN':([5,],[7,]),'ID':([6,13,28,29,],[8,22,32,33,]),'LPAREN':([7,],[9,]),'GREATER':([8,],[10,]),'RPAREN':([9,],[11,]),'LBRACE':([11,],[12,]),'COUT':([12,14,15,24,25,26,27,],[19,19,-4,-5,-6,-7,-8,]),'CIN':([12,14,15,24,25,26,27,],[20,20,-4,-5,-6,-7,-8,]),'RETURN':([12,14,15,24,25,26,27,],[21,21,-4,-5,-6,-7,-8,]),'RBRACE':([14,15,24,25,26,27,],[23,-4,-5,-6,-7,-8,]),'SEMICOLON':([16,17,18,22,30,33,36,37,],[25,26,27,-9,-13,-12,-10,-11,]),'LESSLESS':([19,31,32,],[28,34,35,]),'GREATERGREATER':([20,],[29,]),'NUMBER':([21,],[30,]),'STRING':([28,],[31,]),'ENDL':([34,35,],[36,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'include_directive':([0,],[2,]),'main_function':([2,],[4,]),'statements':([12,],[14,]),'statement':([12,14,],[15,24,]),'expression':([12,14,],[16,16,]),'declaration':([12,14,],[17,17,]),'return_statement':([12,14,],[18,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> include_directive main_function','program',2,'p_program','lab3test.py',84),
  ('include_directive -> INCLUDE LESS ID GREATER','include_directive',4,'p_include_directive','lab3test.py',88),
  ('main_function -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE','main_function',7,'p_main_function','lab3test.py',92),
  ('statements -> statement','statements',1,'p_statements','lab3test.py',96),
  ('statements -> statements statement','statements',2,'p_statements','lab3test.py',97),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','lab3test.py',104),
  ('statement -> declaration SEMICOLON','statement',2,'p_statement','lab3test.py',105),
  ('statement -> return_statement SEMICOLON','statement',2,'p_statement','lab3test.py',106),
  ('declaration -> INT ID','declaration',2,'p_declaration','lab3test.py',110),
  ('expression -> COUT LESSLESS STRING LESSLESS ENDL','expression',5,'p_expression','lab3test.py',114),
  ('expression -> COUT LESSLESS ID LESSLESS ENDL','expression',5,'p_expression','lab3test.py',115),
  ('expression -> CIN GREATERGREATER ID','expression',3,'p_expression','lab3test.py',116),
  ('return_statement -> RETURN NUMBER','return_statement',2,'p_return_statement','lab3test.py',123),
]
